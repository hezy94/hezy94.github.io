{"compress":true,"commitItems":[["9e8a7457-c53d-405a-a64a-666aa01fcb6b",1545490045237,"---\nlayout: post\ntitle: 'Jupyter Notebook & KDD 2010'\ndate: 2018-12-03\ntags:\n---\n# Jupyter Notebook & KDD 2010\n## Jupyter Notebook安装与使用\n1. 安装(注意是要安装pyhton2还是3)\n\n```\n#安装jupyter notebokk\npip3 install jupyter\n\n#创建根目录\nmkdir jupyter\n\n#生成密钥\npython3 -c \"import IPython;print IPython.lib.passwd()\"\n会生成类似sha1:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX的密码\n\n#生成配置文件\njupyter notebook --generate-config\n\n#启动jupyter notebook\nroot用户：jupyter notebook --allow-root\n非root用户：jupyter notebook\n\n#修改配置文件\nvi ../.jupyter/jupyter_notebook_config.py\n加入修改内容\nc.NotebookApp.ip = '*' #允许所有ip访问\nc.NotebookApp.allow_root = True\nc.NotebookApp.open_browser = False\nc.NotebookApp.port = 8888 #默认端口\nc.NotebookApp.password = u'刚才生成的密文(sha:...)'\nc.ContentsManager.root_dir = '/data/jupyter/root' #根目录地址\n\n#打开\njupyter notebook #启动\n210.26.49.91:7000 #通过ip加端口访问\n```\n\n\n## [KDD 2010](http://210.26.49.91:7000/notebooks/jiangfan/CNN_Test/DataAnalysis.ipynb)\n\n### 比赛介绍\n1. [pslcdatashop](https://pslcdatashop.web.cmu.edu/KDDCup/rules.jsp)\n1. [KDD官网](https://www.kdd.org/kdd-cup/view/kdd-cup-2010-student-performance-evaluation/Intro)\n \n### 数据集\n- 分为了3个Development Data Sets与2个Challenge Data Sets\n\n#### 主要包括了：\n- Row：行数\n- Anon Student Id：学生匿名ID\n- Problem Hierarchy：问题层次\n- Problem Name：问题名称\n- Problem View：学生需要问题的总次数\n- Step Name：步骤名称\n- Step Start Time：步骤开始的时间\n- First Transaction Time：第一次提交的时候\n- Correct Transaction Time：正确步骤产生的时间\n- Step End Time：步骤结束的时间（Step Start Time - Step End Time）\n- Step Duration (sec)：步骤耗时\n- Correct Step Duration (sec)：正确步骤耗时\n- Error Step Duration (sec)：错误步骤耗时\n- ***Correct First Attempt：***学生步骤第一次正确尝试的概率\n- Incorrects：错误尝试的总数\n- Hints：提示\n- Corrects：对步骤完全正确的尝试次数\n- KC(KC Model Name)：知识组成\n- Opportunity(KC Model Name)：每次学生与所列知识相遇时+1\n\n#### 评价方式\n1. 对Correct First Attempt进行预测\n1. 对三个开发集求RMSE，并且对其取均值得到最后结果\n\n#### 其他\n1. 一个问题包含了一个或多个步骤，一个步骤由一个或者多个KC组成\n1. 使用了问题+步骤作为标识符\n\n### 数据查看\n\n```\nimport pandas as pd\ndata = pd.read_csv(\"../public/algebra_2005_2006/algebra_2005_2006_train.txt\",sep='\\t')\n```\n\n### 数据处理\n```\ndata['id'] = data[\"Problem Name\"] +' '+ data[\"Step Name\"]\ndata2idx = {c: i for i, c in enumerate(list(set(data['id'])))} \ndata['ID'] = [data2idx[c] for c in data['id']]\ndata.drop(['id'],axis=1,inplace=True)\ndata\n```\n\n### 数据选择\n- ID\n- Problem View\n- Correct Step Duration (sec)\n- Hints\n- Correct First Attempt\n\n```\nfrom sklearn.model_selection import train_test_split\ntrain_data, test_data = train_test_split(data, test_size=0.3)\nx_train = train_data.loc[:,['ID','Problem View','Correct Step Duration (sec)','Hints']].fillna(0).values.reshape(len(train_data),1,4,1)\ny_train = train_data['Correct First Attempt'].values.reshape(len(train_data),1)\n\ndef rmse(y_true, y_pred):\n        return K.sqrt(K.mean(K.square(y_pred - y_true), axis=-1))\n```\n\n### 构建卷积层+池化层+全连接层+Softmax层\n\n#### compile\n- optimizer的选择\nsgd(随机梯度下降)\n\n- loss 使用binary_crossentropy\n\n- 定义了一个RMSE，使用其作为评价标准，另外还提供了accuracy、MSE等\n\n#### fit \n- batch-size的选择\n- epoch的选择\n\n## 记录\n#### optimizer\n1. sgd\nloss: 3.7235 - acc: 0.7664 - rmse: 0.2336\n1. Adam\nloss: 3.7298 - acc: 0.7660 - rmse: 0.2340\n\n## batch-size\n1. 128\nloss: 3.7158 - acc: 0.7669 - rmse: 0.2331\n1. 500\nloss: 3.7209 - acc: 0.7666 - rmse: 0.2334\n1. 2000\nloss: 3.7203 - acc: 0.7666 - rmse: 0.2334\n1. 5000\nloss: 3.7156 - acc: 0.7669 - rmse: 0.2331\n1. 10000\nloss: 3.7178 - acc: 0.7668 - rmse: 0.2332\n\n# other\n1. 去掉dropout层\nloss: 3.7097 - acc: 0.7673 - rmse: 0.2327\n\n\n",[[1545490017831,["jiangfan@hezy.local",[[-1,83,"Jupyter Notebook & KDD 2010"]],[84,110],[83,83]]],[1545490018159,["jiangfan@hezy.local",[[1,83,"盲文OCR"]],[83,83],[88,88]]],[1545490024172,["jiangfan@hezy.local",[[-1,25,"Jupyter Notebook & KDD 2010"]],[26,52],[25,25]]],[1545490024409,["jiangfan@hezy.local",[[1,25,"盲文OCR"]],[25,25],[30,30]]],[1545490033017,["jiangfan@hezy.local",[[-1,46,"03"]],[48,48],[46,46]]],[1545490033393,["jiangfan@hezy.local",[[1,46,"22"]],[46,46],[48,48]]],[1545490039578,["jiangfan@hezy.local",[[-1,70,"Jupyter Notebook安装与使用"],[1,91,"s"]],[70,91],[71,71]]],[1545490039938,["jiangfan@hezy.local",[[1,71,"hiy"]],[71,71],[74,74]]],[1545490040625,["jiangfan@hezy.local",[[-1,70,"shiy"]],[74,74],[70,70]]],[1545490042425,["jiangfan@hezy.local",[[1,70,"使用RNN"]],[70,70],[75,75]]],[1545490043012,["jiangfan@hezy.local",[[-1,72,"RNN"]],[75,75],[72,72]]],[1545490044626,["jiangfan@hezy.local",[[1,72,"CNN实现"]],[72,72],[77,77]]],[1545490046852,["jiangfan@hezy.local",[[1,77,"盲文识别"]],[77,77],[81,81]]],[1545490052685,["jiangfan@hezy.local",[[-1,81,"\n"]],[82,82],[81,81]]],[1545490057908,["jiangfan@hezy.local",[[-1,106,"```\n#安装jupyter notebokk\npip3 install jupyter\n\n#创建根目录\nmkdir jupyter\n\n#生成密钥\npython3 -c \"import IPython;print IPython.lib.passwd()\"\n会生成类似sha1:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX的密码\n\n#生成配置文件\njupyter notebook --generate-config\n\n#启动jupyter notebook\nroot用户：jupyter notebook --allow-root\n非root用户：jupyter notebook\n\n#修改配置文件\nvi ../.jupyter/jupyter_notebook_config.py\n加入修改内容\nc.NotebookApp.ip = '*' #允许所有ip访问\nc.NotebookApp.allow_root = True\nc.NotebookApp.open_browser = False\nc.NotebookApp.port = 8888 #默认端口\nc.NotebookApp.password = u'刚才生成的密文(sha:...)'\nc.ContentsManager.root_dir = '/data/jupyter/root' #根目录地址\n\n#打开\njupyter notebook #启动\n210.26.49.91:7000 #通过ip加端口访问\n```\n\n\n## [KDD 2010](http://210.26.49.91:7000/notebooks/jiangfan/CNN_Test/DataAnalysis.ipynb)\n\n### 比赛介绍\n1. [pslcdatashop](https://pslcdatashop.web.cmu.edu/KDDCup/rules.jsp)\n1. [KDD官网](https://www.kdd.org/kdd-cup/view/kdd-cup-2010-student-performance-evaluation/Intro)\n \n### 数据集\n- 分为了3个Development Data Sets与2个Challenge Data Sets\n\n#### 主要包括了：\n- Row：行数\n- Anon Student Id：学生匿名ID\n- Problem Hierarchy：问题层次\n- Problem Name：问题名称\n- Problem View：学生需要问题的总次数\n- Step Name：步骤名称\n- Step Start Time：步骤开始的时间\n- First Transaction Time：第一次提交的时候\n- Correct Transaction Time：正确步骤产生的时间\n- Step End Time：步骤结束的时间（Step Start Time - Step End Time）\n- Step Duration (sec)：步骤耗时\n- Correct Step Duration (sec)：正确步骤耗时\n- Error Step Duration (sec)：错误步骤耗时\n- ***Correct First Attempt：***学生步骤第一次正确尝试的概率\n- Incorrects：错误尝试的总数\n- Hints：提示\n- Corrects：对步骤完全正确的尝试次数\n- KC(KC Model Name)：知识组成\n- Opportunity(KC Model Name)：每次学生与所列知识相遇时+1\n\n#### 评价方式\n1. 对Correct First Attempt进行预测\n1. 对三个开发集求RMSE，并且对其取均值得到最后结果\n\n#### 其他\n1. 一个问题包含了一个或多个步骤，一个步骤由一个或者多个KC组成\n1. 使用了问题+步骤作为标识符\n\n### 数据查看\n\n```\nimport pandas as pd\ndata = pd.read_csv(\"../public/algebra_2005_2006/algebra_2005_2006_train.txt\",sep='\\t')\n```\n\n### 数据处理\n```\ndata['id'] = data[\"Problem Name\"] +' '+ data[\"Step Name\"]\ndata2idx = {c: i for i, c in enumerate(list(set(data['id'])))} \ndata['ID'] = [data2idx[c] for c in data['id']]\ndata.drop(['id'],axis=1,inplace=True)\ndata\n```\n\n### 数据选择\n- ID\n- Problem View\n- Correct Step Duration (sec)\n- Hints\n- Correct First Attempt\n\n```\nfrom sklearn.model_selection import train_test_split\ntrain_data, test_data = train_test_split(data, test_size=0.3)\nx_train = train_data.loc[:,['ID','Problem View','Correct Step Duration (sec)','Hints']].fillna(0).values.reshape(len(train_data),1,4,1)\ny_train = train_data['Correct First Attempt'].values.reshape(len(train_data),1)\n\ndef rmse(y_true, y_pred):\n        return K.sqrt(K.mean(K.square(y_pred - y_true), axis=-1))\n```\n\n### 构建卷积层+池化层+全连接层+Softmax层\n\n#### compile\n- optimizer的选择\nsgd(随机梯度下降)\n\n- loss 使用binary_crossentropy\n\n- 定义了一个RMSE，使用其作为评价标准，另外还提供了accuracy、MSE等\n\n#### fit \n- batch-size的选择\n- epoch的选择\n\n## 记录\n#### optimizer\n1. sgd\nloss: 3.7235 - acc: 0.7664 - rmse: 0.2336\n1. Adam\nloss: 3.7298 - acc: 0.7660 - rmse: 0.2340\n\n## batch-size\n1. 128\nloss: 3.7158 - acc: 0.7669 - rmse: 0.2331\n1. 500\nloss: 3.7209 - acc: 0.7666 - rmse: 0.2334\n1. 2000\nloss: 3.7203 - acc: 0.7666 - rmse: 0.2334\n1. 5000\nloss: 3.7156 - acc: 0.7669 - rmse: 0.2331\n1. 10000\nloss: 3.7178 - acc: 0.7668 - rmse: 0.2332\n\n# other\n1. 去掉dropout层\nloss: 3.7097 - acc: 0.7673 - rmse: 0.2327\n"]],[106,3287],[106,106]]],[1545490059261,["jiangfan@hezy.local",[[-1,107,"\n"]],[107,107],[106,106]]],[1545490071168,["jiangfan@hezy.local",[[1,70," "]],[69,69],[70,70]]],[1545490072047,["jiangfan@hezy.local",[[-1,70," "]],[70,70],[69,69]]],[1545490084681,["jiangfan@hezy.local",[[-1,106,"\n"],[1,107,"》"]],[106,106],[107,107]]],[1545490085165,["jiangfan@hezy.local",[[-1,106,"》"],[1,107,"\n"]],[107,107],[106,106]]],[1545490085544,["jiangfan@hezy.local",[[-1,106,"\n"],[1,107,">"]],[106,106],[107,107]]],[1545490086128,["jiangfan@hezy.local",[[-1,106,">"],[1,107,"\n"]],[107,107],[106,106]]],[1545490086854,["jiangfan@hezy.local",[[-1,106,"\n"]],[106,106],[105,105]]],[1545490087658,["jiangfan@hezy.local",[[-1,105,"\n"],[1,106,">"]],[105,105],[106,106]]],[1545490091166,["jiangfan@hezy.local",[[1,106," 盲文"]],[106,106],[109,109]]],[1545490152867,["jiangfan@hezy.local",[[-1,107,"盲文"]],[109,109],[107,107]]],[1545490153098,["jiangfan@hezy.local",[[1,107,"盲文又称点字，国际通用的点字由6个凸起的圆点为基本结构组成，是专供盲人摸读、书写的文字符号"]],[107,107],[152,152]]],[1545490168364,["jiangfan@hezy.local",[[1,152,"。"]],[152,152],[153,153]]],[1545490199802,["jiangfan@hezy.local",[[1,67,"\n"]],[66,66],[67,67]]],[1545490200586,["jiangfan@hezy.local",[[1,106,"\n"]],[105,105],[106,106]]],[1545490214308,["jiangfan@hezy.local",[[1,155,"本次的目的是给予"]],[155,155],[163,163]]],[1545490215078,["jiangfan@hezy.local",[[-1,161,"给予"]],[163,163],[161,161]]],[1545490215732,["jiangfan@hezy.local",[[1,161,"几"]],[161,161],[162,162]]],[1545490215781,["jiangfan@hezy.local",[[-1,161,"几"]],[162,162],[161,161]]],[1545490221472,["jiangfan@hezy.local",[[1,161,"使用CNN和"]],[161,161],[167,167]]],[1545490225889,["jiangfan@hezy.local",[[1,167,"迁移"]],[167,167],[169,169]]],[1545490226177,["jiangfan@hezy.local",[[-1,167,"迁移"]],[169,169],[167,167]]],[1545490226928,["jiangfan@hezy.local",[[1,167,"CNN"]],[167,167],[170,170]]],[1545490227535,["jiangfan@hezy.local",[[-1,167,"CNN"]],[170,170],[167,167]]],[1545490228316,["jiangfan@hezy.local",[[1,167,"迁移"]],[167,167],[169,169]]],[1545490228582,["jiangfan@hezy.local",[[-1,167,"迁移"]],[169,169],[167,167]]],[1545490237631,["jiangfan@hezy.local",[[1,167,"Transfer Learning技术"]],[167,167],[186,186]]],[1545490237898,["jiangfan@hezy.local",[[-1,184,"技术"]],[186,186],[184,184]]],[1545490246987,["jiangfan@hezy.local",[[1,184,"两种方法，实现盲点的识别"]],[184,184],[196,196]]],[1545490259424,["jiangfan@hezy.local",[[1,194,"OCR"]],[194,194],[197,197]]],[1545490260962,["jiangfan@hezy.local",[[-1,197,"识别"]],[199,199],[197,197]]],[1545490261203,["jiangfan@hezy.local",[[1,197,"。"]],[197,197],[198,198]]],[1545490261863,["jiangfan@hezy.local",[[1,198,"\n\n"]],[198,198],[199,199]]],[1545490262505,["jiangfan@hezy.local",[[1,200,"\n"]],[199,199],[200,200]]],[1545490278457,["jiangfan@hezy.local",[[1,198,"其中的"]],[198,198],[201,201]]],[1545490278959,["jiangfan@hezy.local",[[-1,198,"其中的"]],[201,201],[198,198]]],[1545490280036,["jiangfan@hezy.local",[[1,198,"打不"]],[198,198],[200,200]]],[1545490280287,["jiangfan@hezy.local",[[-1,198,"打不"]],[200,200],[198,198]]],[1545490281521,["jiangfan@hezy.local",[[1,198,"大众"]],[198,198],[200,200]]],[1545490281753,["jiangfan@hezy.local",[[-1,198,"大众"]],[200,200],[198,198]]],[1545490282199,["jiangfan@hezy.local",[[1,201,"\n"]],[198,198],[199,199]]],[1545490282444,["jiangfan@hezy.local",[[1,202,"\n"]],[199,199],[200,200]]],[1545490282801,["jiangfan@hezy.local",[[-1,202,"\n"]],[200,200],[199,199]]],[1545490283306,["jiangfan@hezy.local",[[1,202,"\n"]],[199,199],[200,200]]],[1545490284374,["jiangfan@hezy.local",[[1,200,"### "]],[200,200],[204,204]]],[1545490286650,["jiangfan@hezy.local",[[1,204,"三个月会员"]],[204,204],[209,209]]],[1545490287529,["jiangfan@hezy.local",[[-1,204,"三个月会员"]],[209,209],[204,204]]],[1545490289421,["jiangfan@hezy.local",[[1,204,"数据"]],[204,204],[206,206]]],[1545490289511,["jiangfan@hezy.local",[[1,209,"\n"]],[206,206],[207,207]]],[1545490289797,["jiangfan@hezy.local",[[1,210,"\n"]],[207,207],[208,208]]],[1545490290264,["jiangfan@hezy.local",[[-1,210,"\n"]],[208,208],[207,207]]],[1545490291090,["jiangfan@hezy.local",[[1,210,"\n"]],[207,207],[208,208]]],[1545490291427,["jiangfan@hezy.local",[[1,208," "]],[208,208],[209,209]]],[1545490291797,["jiangfan@hezy.local",[[-1,208," "]],[209,209],[208,208]]],[1545490295032,["jiangfan@hezy.local",[[1,208,"本次实验的是"]],[208,208],[214,214]]],[1545490295158,["jiangfan@hezy.local",[[-1,213,"是"]],[214,214],[213,213]]],[1545490296014,["jiangfan@hezy.local",[[1,208,"  "]],[208,208],[210,210]]],[1545490298910,["jiangfan@hezy.local",[[-1,208,"  "]],[208,210],[208,208]]],[1545490299256,["jiangfan@hezy.local",[[1,208,"  "]],[208,208],[210,210]]],[1545490305298,["jiangfan@hezy.local",[[1,215,"数据是有"]],[215,215],[219,219]]],[1545490305437,["jiangfan@hezy.local",[[-1,218,"有"]],[219,219],[218,218]]],[1545490306527,["jiangfan@hezy.local",[[1,218,"又"]],[218,218],[219,219]]],[1545490312995,["jiangfan@hezy.local",[[-1,218,"又"]],[219,219],[218,218]]],[1545490314374,["jiangfan@hezy.local",[[1,218,"由于"]],[218,218],[220,220]]],[1545490314496,["jiangfan@hezy.local",[[-1,219,"于"]],[220,220],[219,219]]],[1545490317420,["jiangfan@hezy.local",[[1,218,"自己"]],[218,218],[220,220]]],[1545490319487,["jiangfan@hezy.local",[[-1,220,"由"]],[220,221],[220,220]]],[1545490320111,["jiangfan@hezy.local",[[1,218,"由"]],[218,218],[219,219]]],[1545490324815,["jiangfan@hezy.local",[[-1,218,"由自己"]],[219,221],[218,218]]],[1545490326407,["jiangfan@hezy.local",[[1,218,"自己从"]],[218,218],[221,221]]],[1545490326547,["jiangfan@hezy.local",[[-1,220,"从"]],[221,221],[220,220]]],[1545490329924,["jiangfan@hezy.local",[[1,220,"在盲文打自己上"]],[220,220],[227,227]]],[1545490330612,["jiangfan@hezy.local",[[-1,223,"打自己上"]],[227,227],[223,223]]],[1545490333533,["jiangfan@hezy.local",[[1,223,"打字机器"]],[223,223],[227,227]]],[1545490333600,["jiangfan@hezy.local",[[-1,226,"器"]],[227,227],[226,226]]],[1545490336812,["jiangfan@hezy.local",[[1,226,"上打出的64"]],[226,226],[232,232]]],[1545490337958,["jiangfan@hezy.local",[[-1,230,"64"]],[232,232],[230,230]]],[1545490341761,["jiangfan@hezy.local",[[1,230,"的，共有"]],[230,230],[234,234]]],[1545490347232,["jiangfan@hezy.local",[[-1,231,"，共有"]],[234,234],[231,231]]],[1545490347528,["jiangfan@hezy.local",[[1,231,"，"]],[231,231],[232,232]]],[1545490349426,["jiangfan@hezy.local",[[-1,230,"的，"]],[232,232],[230,230]]],[1545490349671,["jiangfan@hezy.local",[[1,230,"，"]],[230,230],[231,231]]],[1545490350163,["jiangfan@hezy.local",[[-1,230,"，"]],[231,231],[230,230]]],[1545490354688,["jiangfan@hezy.local",[[1,230,"，有64哥了"]],[230,230],[236,236]]],[1545490354911,["jiangfan@hezy.local",[[-1,234,"哥了"]],[236,236],[234,234]]],[1545490360879,["jiangfan@hezy.local",[[1,234,"个不同的类别，4000"]],[234,234],[245,245]]],[1545490361767,["jiangfan@hezy.local",[[-1,241,"4000"]],[245,245],[241,241]]],[1545490364371,["jiangfan@hezy.local",[[1,241,"3000+长"]],[241,241],[247,247]]],[1545490364448,["jiangfan@hezy.local",[[-1,246,"长"]],[247,247],[246,246]]],[1545490364874,["jiangfan@hezy.local",[[1,246,"与"]],[246,246],[247,247]]],[1545490364969,["jiangfan@hezy.local",[[-1,246,"与"]],[247,247],[246,246]]],[1545490370273,["jiangfan@hezy.local",[[1,246,"张带有标签的是"]],[246,246],[253,253]]],[1545490370303,["jiangfan@hezy.local",[[-1,252,"是"]],[253,253],[252,252]]],[1545490372015,["jiangfan@hezy.local",[[1,252,"拘束"]],[252,252],[254,254]]],[1545490372266,["jiangfan@hezy.local",[[-1,252,"拘束"]],[254,254],[252,252]]],[1545490373217,["jiangfan@hezy.local",[[1,252,"数据。"]],[252,252],[255,255]]],[1545490404308,["jiangfan@hezy.local",[[1,241,"从不同角度，不同光秀安"]],[241,241],[252,252]]],[1545490404576,["jiangfan@hezy.local",[[-1,250,"秀安"]],[252,252],[250,250]]],[1545490405345,["jiangfan@hezy.local",[[-1,249,"光"]],[250,250],[249,249]]],[1545490408135,["jiangfan@hezy.local",[[1,249,"光线拍摄的，"]],[249,249],[255,255]]],[1545490413332,["jiangfan@hezy.local",[[-1,266,"数据"],[1,268,"图片"]],[266,266],[268,268]]],[1545490444332,["jiangfan@hezy.local",[[1,269,"4_29.jpg"]],[269,269],[277,277]]],[1545490448919,["jiangfan@hezy.local",[[-1,269,"4_29.jpg\n"]],[269,278],[269,269]]],[1545490449944,["jiangfan@hezy.local",[[1,270,"  \n"]],[269,269],[272,272]]],[1545490452911,["jiangfan@hezy.local",[[-1,273,"\n"]],[272,273],[272,272]]],[1545490453600,["jiangfan@hezy.local",[[-1,270,"  "]],[272,272],[270,270]]],[1545490454001,["jiangfan@hezy.local",[[-1,270,"\n"]],[270,270],[269,269]]],[1545490454547,["jiangfan@hezy.local",[[1,270,"  \n"]],[269,269],[272,272]]],[1545490483162,["jiangfan@hezy.local",[[-1,270,"  "]],[272,272],[270,270]]],[1545490483969,["jiangfan@hezy.local",[[-1,270,"\n"],[1,271," "]],[270,270],[271,271]]],[1545490485077,["jiangfan@hezy.local",[[-1,270," "],[1,271,"\n"]],[271,271],[270,270]]],[1545490485506,["jiangfan@hezy.local",[[-1,270,"\n"]],[270,270],[269,269]]],[1545490485971,["jiangfan@hezy.local",[[1,270,"  \n"]],[269,269],[272,272]]],[1545490486587,["jiangfan@hezy.local",[[-1,270,"  "],[1,272,"\n"]],[272,272],[271,271]]],[1545490487819,["jiangfan@hezy.local",[[-1,271,"\n"],[1,272,"#"]],[271,271],[272,272]]],[1545490488517,["jiangfan@hezy.local",[[1,272,"## "]],[272,272],[275,275]]],[1545490494093,["jiangfan@hezy.local",[[-1,272,"## "]],[275,275],[272,272]]],[1545490494331,["jiangfan@hezy.local",[[-1,271,"#"],[1,272,"\n"]],[272,272],[271,271]]],[1545490494752,["jiangfan@hezy.local",[[-1,271,"\n"]],[271,271],[270,270]]],[1545490498963,["jiangfan@hezy.local",[[1,270,"  前几"]],[270,270],[274,274]]],[1545490499364,["jiangfan@hezy.local",[[-1,272,"前几"]],[274,274],[272,272]]],[1545490530661,["jiangfan@hezy.local",[[1,206,"准备%书"]],[206,206],[210,210]]],[1545490530914,["jiangfan@hezy.local",[[-1,208,"%书"]],[210,210],[208,208]]],[1545490533810,["jiangfan@hezy.local",[[1,208,"&数据处理"]],[208,208],[213,213]]],[1545490537004,["jiangfan@hezy.local",[[-1,209,"数据"]],[211,211],[209,209]]],[1545490540535,["jiangfan@hezy.local",[[-1,275,"  "]],[277,277],[275,275]]],[1545490540940,["jiangfan@hezy.local",[[-1,275,"\n"]],[275,275],[274,274]]],[1545490541650,["jiangfan@hezy.local",[[1,275,"  \n"]],[274,274],[277,277]]],[1545490542150,["jiangfan@hezy.local",[[-1,275,"  "]],[277,277],[275,275]]],[1545490542477,["jiangfan@hezy.local",[[-1,275,"\n"],[1,276,"p"]],[275,275],[276,276]]],[1545490542609,["jiangfan@hezy.local",[[1,276,"y"]],[276,276],[277,277]]],[1545490542951,["jiangfan@hezy.local",[[-1,276,"y"]],[277,277],[276,276]]],[1545490543096,["jiangfan@hezy.local",[[-1,275,"p"],[1,276,"\n"]],[276,276],[275,275]]],[1545490543306,["jiangfan@hezy.local",[[-1,275,"\n"],[1,276,"`"]],[275,275],[276,276]]],[1545490543725,["jiangfan@hezy.local",[[1,276,"``"]],[276,276],[278,278]]],[1545490543752,["jiangfan@hezy.local",[[1,278,"language\n```\n"]],[278,278],[278,286]]],[1545490544802,["jiangfan@hezy.local",[[-1,278,"language"],[1,286,"p"]],[278,286],[279,279]]],[1545490545250,["jiangfan@hezy.local",[[1,279,"ythj"]],[279,279],[283,283]]],[1545490545661,["jiangfan@hezy.local",[[-1,282,"j"]],[283,283],[282,282]]],[1545490546320,["jiangfan@hezy.local",[[1,282,"on"]],[282,282],[284,284]]],[1545490546567,["jiangfan@hezy.local",[[1,285,"\n"]],[284,284],[285,285]]],[1545490547036,["jiangfan@hezy.local",[[1,285,"def img2vec(data_path):\n    data = pd.read_csv(data_path,sep=' ',names=['name','label'])\n    x_list = data['name']\n    length = len(data)\n    #ifNull?\n    if not os.listdir('data/testImage/'):\n        for i in range(length):\n            rgb=io.imread('data/images/'+x_list[i])\n            dst=transform.resize(rgb,(250,250))\n            io.imsave('data/testImage/'+x_list[i],dst)\n    #return img & label\n    x = []\n    for i in range(length):\n        img=io.imread('data/testImage/'+x_list[i])\n        print(type(img))\n        x.append(img)\n    x = x.reshape((1,) + x.shape)\n    y = data['label'].values.flatten()\n    return x,y\nx_train,y_train = img2vec('data/train.txt')"]],[285,285],[957,957]]],[1545490552237,["jiangfan@hezy.local",[[1,285,"\n"]],[284,284],[285,285]]],[1545490556100,["jiangfan@hezy.local",[[1,285,"#数据处理"]],[285,285],[290,290]]],[1545490556748,["jiangfan@hezy.local",[[-1,286,"数据处理"]],[290,290],[286,286]]],[1545490559182,["jiangfan@hezy.local",[[1,286,"图片处理与"]],[286,286],[291,291]]],[1545490568265,["jiangfan@hezy.local",[[-1,313,""],[1,313,","],[1,581,"gray=color.rgb2gray(rgb)\n            "],[-1,602,"rgb"],[1,605,"gray"],[-1,794,"print(type(img))\n        "],[1,841,"np.array("],[1,842,")"],[-1,851,"(1,) + x.shape)"],[1,866,"-1, 1,250, 250)/255"],[-1,920,"\nx_train,y_train = img2vec('data/train.txt')"]],[292,964],[948,948]]],[1545490568968,["jiangfan@hezy.local",[[1,313,""],[-1,313,","],[-1,582,"gray=color.rgb2gray(rgb)\n            "],[1,640,"rgb"],[-1,640,"gray"],[1,833,"print(type(img))\n        "],[-1,855,"np.array("],[-1,865,")"],[1,875,"(1,) + x.shape)"],[-1,875,"-1, 1,250, 250)/255"],[1,948,"\nx_train,y_train = img2vec('data/train.txt')"]],[948,948],[292,964]]],[1545490570768,["jiangfan@hezy.local",[[-1,313,""],[1,313,","],[1,581,"gray=color.rgb2gray(rgb)\n            "],[-1,602,"rgb"],[1,605,"gray"],[-1,794,"print(type(img))\n        "],[1,841,"np.array("],[1,842,")"],[-1,851,"(1,) + x.shape)"],[1,866,"-1, 1,250, 250)/255"]],[292,920],[948,948]]],[1545490579202,["jiangfan@hezy.local",[[1,291,"数据"]],[291,291],[293,293]]],[1545490580330,["jiangfan@hezy.local",[[-1,288,"处理与数据"]],[293,293],[288,288]]],[1545490583127,["jiangfan@hezy.local",[[1,288,"与数据处理部分"]],[288,288],[295,295]]],[1545490585872,["jiangfan@hezy.local",[[1,1001,"\n"]],[1000,1000],[1001,1001]]],[1545490590450,["jiangfan@hezy.local",[[-1,204,"数据"]],[206,206],[204,204]]],[1545490591034,["jiangfan@hezy.local",[[1,204,"图片"]],[204,204],[206,206]]],[1545490593481,["jiangfan@hezy.local",[[1,209,"数据"]],[209,209],[211,211]]],[1545490598333,["jiangfan@hezy.local",[[1,1004,"\n"]],[1003,1003],[1004,1004]]],[1545490598699,["jiangfan@hezy.local",[[-1,1004,"\n"],[1,1005,"#"]],[1004,1004],[1005,1005]]],[1545490602675,["jiangfan@hezy.local",[[1,1005,"## 模型选择1"]],[1005,1005],[1013,1013]]],[1545490604474,["jiangfan@hezy.local",[[1,1013,"\n\n"]],[1013,1013],[1014,1014]]],[1545490606834,["jiangfan@hezy.local",[[-1,1014,"\n"],[1,1015,"p"]],[1014,1014],[1015,1015]]],[1545490607081,["jiangfan@hezy.local",[[-1,1014,"p"],[1,1015,"\n"]],[1015,1015],[1014,1014]]],[1545490607880,["jiangfan@hezy.local",[[-1,1014,"\n"],[1,1015,"`"]],[1014,1014],[1015,1015]]],[1545490608219,["jiangfan@hezy.local",[[1,1015,"``"]],[1015,1015],[1017,1017]]],[1545490608248,["jiangfan@hezy.local",[[1,1017,"language\n```\n"]],[1017,1017],[1017,1025]]],[1545490608851,["jiangfan@hezy.local",[[-1,1017,"language"],[1,1025,"p"]],[1017,1025],[1018,1018]]],[1545490610230,["jiangfan@hezy.local",[[1,1018,"ython"]],[1018,1018],[1023,1023]]],[1545490610356,["jiangfan@hezy.local",[[1,1024,"\n"]],[1023,1023],[1024,1024]]],[1545490626264,["jiangfan@hezy.local",[[1,1024,"使用了"]],[1024,1024],[1027,1027]]],[1545490626873,["jiangfan@hezy.local",[[-1,1024,"使用了"]],[1027,1027],[1024,1024]]],[1545490630697,["jiangfan@hezy.local",[[1,1024,"#使用Keras"]],[1024,1024],[1032,1032]]],[1545490631952,["jiangfan@hezy.local",[[1,1033,"\n"]],[1032,1032],[1033,1033]]],[1545490632704,["jiangfan@hezy.local",[[-1,1033,"\n"]],[1033,1033],[1032,1032]]],[1545490633408,["jiangfan@hezy.local",[[1,1032,"——"]],[1032,1032],[1034,1034]]],[1545490634056,["jiangfan@hezy.local",[[-1,1032,"——"]],[1034,1034],[1032,1032]]],[1545490634912,["jiangfan@hezy.local",[[1,1032,"-"]],[1032,1032],[1033,1033]]],[1545490635263,["jiangfan@hezy.local",[[-1,1032,"-"]],[1033,1033],[1032,1032]]],[1545490636910,["jiangfan@hezy.local",[[1,1032,"_CNMN"]],[1032,1032],[1037,1037]]],[1545490637524,["jiangfan@hezy.local",[[-1,1034,"NMN"]],[1037,1037],[1034,1034]]],[1545490639747,["jiangfan@hezy.local",[[1,1034,"NN模块"]],[1034,1034],[1038,1038]]],[1545490644378,["jiangfan@hezy.local",[[-1,1032,"_"]],[1033,1033],[1032,1032]]],[1545490645165,["jiangfan@hezy.local",[[1,1032,"中"]],[1032,1032],[1033,1033]]],[1545490645385,["jiangfan@hezy.local",[[1,1033,"的"]],[1033,1033],[1034,1034]]],[1545490645966,["jiangfan@hezy.local",[[1,1040,"\n"]],[1039,1039],[1040,1040]]],[1545490646284,["jiangfan@hezy.local",[[1,1040,"model = Sequential()\nmodel.add(Conv2D(filters=32,kernel_size=5,strides=1,activation='relu',padding='same',input_shape=(250,250,3)))\nmodel.add(MaxPooling2D(pool_size=(2,2),strides=2,padding='same'))\nmodel.add(Conv2D(filters=64,kernel_size=5,strides=1,activation='relu',padding='same'))\nmodel.add(MaxPooling2D(pool_size=(2,2),strides=2,padding='same'))\nmodel.add(Flatten())\nmodel.add(Dense(2048,activation='relu'))\nmodel.add(Dense(512,activation='relu'))\nmodel.add(Dense(64,activation='softmax'))\nprint(model.summary())\n"]],[1040,1040],[1558,1558]]],[1545490651617,["jiangfan@hezy.local",[[-1,1535,"print(model.summary())"]],[1535,1557],[1535,1535]]],[1545490658359,["jiangfan@hezy.local",[[1,1536,"adam = Adam(lr=0.0001)\nmodel.compile(optimizer=adam,loss='categorical_crossentropy',metrics=['accuracy'])\nprint('Training ------------')\nmodel.fit(x_train, y_train, epochs=20, batch_size=16)\nprint('\\nTesting ------------')\nloss, accuracy = model.evaluate(x_test, y_test)"]],[1536,1536],[1806,1806]]],[1545490661490,["jiangfan@hezy.local",[[-1,1642,"print('Training ------------')"]],[1642,1672],[1642,1642]]],[1545490661894,["jiangfan@hezy.local",[[-1,1642,"\n"]],[1642,1642],[1641,1641]]],[1545490663042,["jiangfan@hezy.local",[[-1,1696,"print('\\nTesting ------------')"]],[1696,1727],[1696,1696]]],[1545490663451,["jiangfan@hezy.local",[[-1,1696,"\n"]],[1696,1696],[1695,1695]]],[1545490669790,["jiangfan@hezy.local",[[1,1013,"——Keras"]],[1013,1013],[1020,1020]]],[1545490670994,["jiangfan@hezy.local",[[-1,1014,"—Keras"]],[1020,1020],[1014,1014]]],[1545490675325,["jiangfan@hezy.local",[[1,1014,"KerasCNN"]],[1014,1014],[1022,1022]]],[1545490677063,["jiangfan@hezy.local",[[1,1019,"——"]],[1019,1019],[1021,1021]]],[1545490677710,["jiangfan@hezy.local",[[-1,1019,"——"]],[1021,1021],[1019,1019]]],[1545490678151,["jiangfan@hezy.local",[[1,1019,"_"]],[1019,1019],[1020,1020]]],[1545490681158,["jiangfan@hezy.local",[[1,1758,"\n"]],[1757,1757],[1758,1758]]],[1545490681333,["jiangfan@hezy.local",[[1,1759,"\n"]],[1758,1758],[1759,1759]]],[1545490684263,["jiangfan@hezy.local",[[1,1759,"### 模型选择1—Keras_CNN"]],[1759,1759],[1778,1778]]],[1545490686113,["jiangfan@hezy.local",[[-1,1767,"1"],[1,1768,"2"]],[1767,1768],[1768,1768]]],[1545490687933,["jiangfan@hezy.local",[[-1,1769,"Keras_CNN"],[1,1778,"P"]],[1769,1778],[1770,1770]]],[1545490689741,["jiangfan@hezy.local",[[1,1770,"ytor"]],[1770,1770],[1774,1774]]],[1545490690769,["jiangfan@hezy.local",[[-1,1771,"tor"]],[1774,1774],[1771,1771]]],[1545490696932,["jiangfan@hezy.local",[[1,1771,"Torch_Transfer"]],[1771,1771],[1785,1785]]],[1545490727581,["jiangfan@hezy.local",[[1,1786,"\n"]],[1785,1785],[1786,1786]]],[1545490727781,["jiangfan@hezy.local",[[-1,1786,"\n"],[1,1787,"`"]],[1786,1786],[1787,1787]]],[1545490728131,["jiangfan@hezy.local",[[1,1787,"``"]],[1787,1787],[1789,1789]]],[1545490728166,["jiangfan@hezy.local",[[1,1789,"language\n```\n"]],[1789,1789],[1789,1797]]],[1545490728903,["jiangfan@hezy.local",[[-1,1789,"language"],[1,1797,"p"]],[1789,1797],[1790,1790]]],[1545490729614,["jiangfan@hezy.local",[[1,1790,"ython"]],[1790,1790],[1795,1795]]],[1545490729796,["jiangfan@hezy.local",[[1,1796,"\n"]],[1795,1795],[1796,1796]]],[1545490762498,["jiangfan@hezy.local",[[1,1796,"data_dir = \"ocr_data\"\nmodel_name = \"vgg\"\nnum_classes = 64\nbatch_size = 16\nnum_epochs = 25\nfeature_extract = False\n\ndef train_model(model, dataloaders, criterion, optimizer, num_epochs=25, is_inception=False):\n    since = time.time()\n    val_acc_history = []\n    best_model_wts = copy.deepcopy(model.state_dict())\n    best_acc = 0.0\n    for epoch in range(num_epochs):\n        print('Epoch {}/{}'.format(epoch, num_epochs - 1))\n        print('-' * 10)\n        # Each epoch has a training and validation phase\n        for phase in ['train', 'val']:\n            if phase == 'train':\n                model.train()  # Set model to training mode\n            else:\n                model.eval()   # Set model to evaluate mode\n            running_loss = 0.0\n            running_corrects = 0\n            # Iterate over data.\n            for inputs, labels in dataloaders[phase]:\n                inputs = inputs.to(device)\n                labels = labels.to(device)\n                # zero the parameter gradients\n                optimizer.zero_grad()\n                # forward\n                # track history if only in train\n                with torch.set_grad_enabled(phase == 'train'):\n                    if is_inception and phase == 'train':\n\n                        outputs, aux_outputs = model(inputs)\n                        loss1 = criterion(outputs, labels)\n                        loss2 = criterion(aux_outputs, labels)\n                        loss = loss1 + 0.4*loss2\n                    else:\n                        outputs = model(inputs)\n                        loss = criterion(outputs, labels)\n\n                    _, preds = torch.max(outputs, 1)\n\n                    if phase == 'train':\n                        loss.backward()\n                        optimizer.step()\n                # statistics\n                running_loss += loss.item() * inputs.size(0)\n                running_corrects += torch.sum(preds == labels.data)\n            epoch_loss = running_loss / len(dataloaders[phase].dataset)\n            epoch_acc = running_corrects.double() / len(dataloaders[phase].dataset)\n            print('{} Loss: {:.4f} Acc: {:.4f}'.format(phase, epoch_loss, epoch_acc))\n            # deep copy the model\n            if phase == 'val' and epoch_acc > best_acc:\n                best_acc = epoch_acc\n                best_model_wts = copy.deepcopy(model.state_dict())\n            if phase == 'val':\n                val_acc_history.append(epoch_acc)\n        print()\n    time_elapsed = time.time() - since\n    print('Training complete in {:.0f}m {:.0f}s'.format(time_elapsed // 60, time_elapsed % 60))\n    print('Best val Acc: {:4f}'.format(best_acc))\n    # load best model weights\n    model.load_state_dict(best_model_wts)\n    return model, val_acc_history\n\ndef set_parameter_requires_grad(model, feature_extracting):\n    if feature_extracting:\n        for param in model.parameters():\n            param.requires_grad = False\n            \ndef initialize_model(model_name, num_classes, feature_extract, use_pretrained=True):\n    model_ft = None\n    input_size = 224\n    model_ft = models.resnet18(pretrained=use_pretrained)\n    set_parameter_requires_grad(model_ft, feature_extract)\n    num_ftrs = model_ft.fc.in_features\n    model_ft.fc = nn.Linear(num_ftrs, num_classes)\n    return model_ft, input_size\n\nmodel_ft, input_size = initialize_model(model_name, num_classes, feature_extract, use_pretrained=True)\n\ndata_transforms = {\n    'train': transforms.Compose([\n        transforms.RandomResizedCrop(input_size),\n        transforms.RandomHorizontalFlip(),\n        transforms.ToTensor(),\n        transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\n    ]),\n    'val': transforms.Compose([\n        transforms.Resize(input_size),\n        transforms.CenterCrop(input_size),\n        transforms.ToTensor(),\n        transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\n    ]),\n}\nprint(\"Initializing Datasets and Dataloaders...\")\n\nimage_datasets = {x: datasets.ImageFolder(os.path.join(data_dir, x), data_transforms[x]) for x in ['train', 'val']}\ndataloaders_dict = {x: torch.utils.data.DataLoader(image_datasets[x], batch_size=batch_size, shuffle=True, num_workers=4) for x in ['train', 'val']}\ndevice = torch.device(\"cuda:0\" if torch.cuda.is_available() else \"cpu\")\n\nmodel_ft = model_ft.to(device)\nparams_to_update = model_ft.parameters()\n# print(\"Params to learn:\")\n# if feature_extract:\n#     params_to_update = []\n#     for name,param in model_ft.named_parameters():\n#         if param.requires_grad == True:\n#             params_to_update.append(param)\n#             print(\"\\t\",name)\n# else:\n#     for name,param in model_ft.named_parameters():\n#         if param.requires_grad == True:\n#             print(\"\\t\",name)\n\noptimizer_ft = optim.SGD(params_to_update, lr=0.001, momentum=0.9)\n\ncriterion = nn.CrossEntropyLoss()\nmodel_ft, hist = train_model(model_ft, dataloaders_dict, criterion, optimizer_ft, num_epochs=num_epochs, is_inception=(model_name==\"inception\"))"]],[1796,1796],[6790,6790]]],[1545490766804,["jiangfan@hezy.local",[[-1,6160,"# print(\"Params to learn:\")\n# if feature_extract:\n#     params_to_update = []\n#     for name,param in model_ft.named_parameters():\n#         if param.requires_grad == True:\n#             params_to_update.append(param)\n#             print(\"\\t\",name)\n# else:\n#     for name,param in model_ft.named_parameters():\n#         if param.requires_grad == True:\n#             print(\"\\t\",name)\n"]],[6160,6543],[6160,6160]]],[1545490767680,["jiangfan@hezy.local",[[-1,6160,"\n"]],[6160,6160],[6159,6159]]],[1545490780082,["jiangfan@hezy.local",[[1,1785,"_"]],[1785,1785],[1786,1786]]],[1545490780988,["jiangfan@hezy.local",[[-1,1785,"_"]],[1786,1786],[1785,1785]]],[1545490787012,["jiangfan@hezy.local",[[1,1785," Learning_B"]],[1785,1785],[1796,1796]]],[1545490787645,["jiangfan@hezy.local",[[-1,1795,"B"]],[1796,1796],[1795,1795]]],[1545490788490,["jiangfan@hezy.local",[[1,1795,"VFG"]],[1795,1795],[1798,1798]]],[1545490789297,["jiangfan@hezy.local",[[-1,1796,"FG"]],[1798,1798],[1796,1796]]],[1545490789646,["jiangfan@hezy.local",[[1,1796,"GG"]],[1796,1796],[1798,1798]]],[1545490797822,["jiangfan@hezy.local",[[1,6424,"\n"]],[6423,6423],[6424,6424]]],[1545490798713,["jiangfan@hezy.local",[[-1,6424,"\n"],[1,6425,"#"]],[6424,6424],[6425,6425]]],[1545490801070,["jiangfan@hezy.local",[[1,6425,"## 是"]],[6425,6425],[6429,6429]]],[1545490801157,["jiangfan@hezy.local",[[-1,6428,"是"]],[6429,6429],[6428,6428]]],[1545490803113,["jiangfan@hezy.local",[[1,6428,"实验结果"]],[6428,6428],[6432,6432]]],[1545490803324,["jiangfan@hezy.local",[[1,6432,"\n\n"]],[6432,6432],[6433,6433]]],[1545490856390,["jiangfan@hezy.local",[[1,5084,"\n| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |\n\n"]],[5071,5071],[5326,5326]]],[1545490864965,["jiangfan@hezy.local",[[-1,5085,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |"]],[5085,5324],[5085,5085]]],[1545490866721,["jiangfan@hezy.local",[[1,5085,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |"]],[5085,5085],[5085,5324]]],[1545490867220,["jiangfan@hezy.local",[[-1,5084,"\n| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |\n\n"]],[5326,5326],[5071,5071]]],[1545490906661,["jiangfan@hezy.local",[[1,6434,"| item      | Model    |  Price | Qty |\n| --------- | -------- | -----: | --: |\n| Laptop    | 13\" Pro  | $1,300 |   1 |\n| Phone     | Plus     |   $800 |   2 |\n| Watch     | Series 3 |   $400 |   3 |\n| Headphone | HD650    |   $350 |   2 |\n\n\n"]],[6433,6433],[6675,6675]]],[1545490915893,["jiangfan@hezy.local",[[-1,6448,"Model "]],[6448,6448],[6448,6448]]],[1545490920170,["jiangfan@hezy.local",[[-1,6436,"item"]],[6436,6436],[6436,6436]]],[1545490922043,["jiangfan@hezy.local",[[1,6436,"loss"]],[6436,6436],[6440,6440]]],[1545490925079,["jiangfan@hezy.local",[[-1,6510,"Laptop"],[1,6516,"A"]],[6510,6516],[6511,6511]]],[1545490926724,["jiangfan@hezy.local",[[1,6511,"ccua"]],[6511,6511],[6515,6515]]],[1545490932341,["jiangfan@hezy.local",[[-1,6436,"loss"],[1,6440,"N"]],[6436,6440],[6437,6437]]],[1545490932749,["jiangfan@hezy.local",[[1,6437,"ame"]],[6437,6437],[6440,6440]]],[1545490937660,["jiangfan@hezy.local",[[1,6449,"Keras"]],[6449,6449],[6454,6454]]],[1545490941601,["jiangfan@hezy.local",[[-1,6459,"Price"],[1,6464,"T"]],[6459,6464],[6460,6460]]],[1545490942102,["jiangfan@hezy.local",[[1,6460,"ran"]],[6460,6460],[6463,6463]]],[1545490943276,["jiangfan@hezy.local",[[-1,6459,"Tran"]],[6463,6463],[6459,6459]]],[1545490944195,["jiangfan@hezy.local",[[1,6459,"pP"]],[6459,6459],[6461,6461]]],[1545490944628,["jiangfan@hezy.local",[[-1,6459,"pP"]],[6461,6461],[6459,6459]]],[1545490945088,["jiangfan@hezy.local",[[1,6459,"Py"]],[6459,6459],[6461,6461]]],[1545490947288,["jiangfan@hezy.local",[[-1,6459,"Py"]],[6461,6461],[6459,6459]]],[1545490949981,["jiangfan@hezy.local",[[-1,6449,"Keras"],[1,6454,"m"]],[6449,6454],[6450,6450]]],[1545490950552,["jiangfan@hezy.local",[[1,6450,"odel1"]],[6450,6450],[6455,6455]]],[1545490953387,["jiangfan@hezy.local",[[1,6460,"model2"]],[6460,6460],[6466,6466]]],[1545490955842,["jiangfan@hezy.local",[[-1,6469,"Qty "]],[6472,6472],[6468,6468]]],[1545490956172,["jiangfan@hezy.local",[[-1,6468," "]],[6468,6468],[6468,6468]]],[1545490956221,["jiangfan@hezy.local",[[1,6468,"\\"]],[6468,6468],[6469,6469]]],[1545490956996,["jiangfan@hezy.local",[[-1,6468,"\\|"]],[6469,6469],[6468,6468]]],[1545490958326,["jiangfan@hezy.local",[[-1,6503,"--: |"]],[6503,6508],[6503,6503]]],[1545490960943,["jiangfan@hezy.local",[[-1,6539,"1 |"]],[6539,6542],[6539,6539]]],[1545490961847,["jiangfan@hezy.local",[[-1,6576,"2 |"]],[6576,6579],[6576,6576]]],[1545490963636,["jiangfan@hezy.local",[[-1,6613,"3 |"]],[6613,6616],[6613,6613]]],[1545490964931,["jiangfan@hezy.local",[[-1,6649," 2 |"]],[6650,6653],[6649,6649]]],[1545490966124,["jiangfan@hezy.local",[[-1,6499,":"]],[6500,6500],[6499,6499]]],[1545490974068,["jiangfan@hezy.local",[[-1,6508,"ua"]],[6510,6510],[6508,6508]]],[1545490974950,["jiangfan@hezy.local",[[1,6508,"arty"]],[6508,6508],[6512,6512]]],[1545490975561,["jiangfan@hezy.local",[[-1,6510,"ty"]],[6512,6512],[6510,6510]]],[1545490975760,["jiangfan@hezy.local",[[1,6510,"y"]],[6510,6510],[6511,6511]]],[1545490978497,["jiangfan@hezy.local",[[-1,6505,"Accary"]],[6511,6511],[6505,6505]]],[1545490983366,["jiangfan@hezy.local",[[1,6505,"accuracy"]],[6505,6505],[6513,6513]]],[1545490986203,["jiangfan@hezy.local",[[-1,6505,"a"],[1,6506,"A"]],[6505,6506],[6506,6506]]],[1545490988667,["jiangfan@hezy.local",[[-1,6544,"Phone"],[1,6549,"K"]],[6544,6549],[6545,6545]]],[1545490988929,["jiangfan@hezy.local",[[-1,6544,"K"]],[6545,6545],[6544,6544]]],[1545490990280,["jiangfan@hezy.local",[[1,6544,"Loss"]],[6544,6544],[6548,6548]]],[1545490992851,["jiangfan@hezy.local",[[-1,6578,"| Watch     | Series 3 |   $400 |   "]],[6578,6614],[6578,6578]]],[1545490994523,["jiangfan@hezy.local",[[-1,6579,"| Headphone | HD650    |   $350 |  "]],[6579,6614],[6579,6579]]],[1545490995039,["jiangfan@hezy.local",[[-1,6581,"\n"]],[6579,6579],[6578,6578]]],[1545490995520,["jiangfan@hezy.local",[[-1,6580,"\n"]],[6578,6578],[6577,6577]]],[1545491006779,["jiangfan@hezy.local",[[-1,6530,"$1,300"],[1,6536,"0.947917"]],[6530,6536],[6538,6538]]],[1545491012986,["jiangfan@hezy.local",[[-1,6557,"Plus"],[1,6561,"0.2484"]],[6557,6561],[6563,6563]]],[1545491018998,["jiangfan@hezy.local",[[-1,6572,"$800"],[1,6576,"0.2484"]],[6572,6576],[6578,6578]]],[1545493284142,["jiangfan@hezy.local",[[-1,6519,"13\" Pro"]],[6519,6526],[6519,6519]]],[1545493285955,["jiangfan@hezy.local",[[1,6519,"0.9817"]],[6519,6519],[6525,6525]]],[1545493293603,["jiangfan@hezy.local",[[-1,6558,"2484"],[1,6562,"0143"]],[6556,6562],[6562,6562]]],[1545493296084,["jiangfan@hezy.local",[[1,6585,"\n"]],[6582,6582],[6583,6583]]],[1545493296325,["jiangfan@hezy.local",[[1,6586,"\n"]],[6583,6583],[6584,6584]]],[1545493301518,["jiangfan@hezy.local",[[1,6584,"- 平不是"]],[6584,6584],[6589,6589]]],[1545493302243,["jiangfan@hezy.local",[[-1,6586,"平不是"]],[6589,6589],[6586,6586]]],[1545493310299,["jiangfan@hezy.local",[[1,6586,"不是说模型1一定比没顶"]],[6586,6586],[6597,6597]]],[1545493310762,["jiangfan@hezy.local",[[-1,6595,"没顶"]],[6597,6597],[6595,6595]]],[1545493313822,["jiangfan@hezy.local",[[1,6595,"模型2好，但是"]],[6595,6595],[6602,6602]]],[1545493327006,["jiangfan@hezy.local",[[-1,6600,"但是"]],[6602,6602],[6600,6600]]],[1545493327071,["jiangfan@hezy.local",[[1,6600,"。"]],[6600,6600],[6601,6601]]],[1545493330215,["jiangfan@hezy.local",[[-1,6599,"，。"]],[6601,6601],[6599,6599]]],[1545493331103,["jiangfan@hezy.local",[[1,6599,".y"]],[6599,6599],[6601,6601]]],[1545493332112,["jiangfan@hezy.local",[[-1,6599,".y"]],[6601,6601],[6599,6599]]],[1545493333335,["jiangfan@hezy.local",[[1,6599,"。大"]],[6599,6599],[6601,6601]]],[1545493333419,["jiangfan@hezy.local",[[-1,6600,"大"]],[6601,6601],[6600,6600]]],[1545493338761,["jiangfan@hezy.local",[[1,6600,"最大原因是句"]],[6600,6600],[6606,6606]]],[1545493338827,["jiangfan@hezy.local",[[-1,6605,"句"]],[6606,6606],[6605,6605]]],[1545493340035,["jiangfan@hezy.local",[[1,6605,"测"]],[6605,6605],[6606,6606]]],[1545493340162,["jiangfan@hezy.local",[[-1,6605,"测"]],[6606,6606],[6605,6605]]],[1545493342081,["jiangfan@hezy.local",[[1,6605,"训练机与"]],[6605,6605],[6609,6609]]],[1545493342752,["jiangfan@hezy.local",[[-1,6605,"训练机与"]],[6609,6609],[6605,6605]]],[1545493352876,["jiangfan@hezy.local",[[1,6605,"数据太少，测试的结果并没有什么说服力，单"]],[6605,6605],[6625,6625]]],[1545493353626,["jiangfan@hezy.local",[[-1,6623,"，单"]],[6625,6625],[6623,6623]]],[1545493353941,["jiangfan@hezy.local",[[1,6623,"。"]],[6623,6623],[6624,6624]]],[1545493384024,["jiangfan@hezy.local",[[-1,68,"## 使用CNN实现盲文识别1. 安装(注意是要安装pyhton2还是3)"]],[82,105],[68,68]]],[1545493384248,["jiangfan@hezy.local",[[-1,69,"\n"]],[68,68],[67,67]]],[1545493386156,["jiangfan@hezy.local",[[-1,68,"\n"]],[67,67],[66,66]]],[1545493395693,["jiangfan@hezy.local",[[-1,6587,"\n"]],[6587,6587],[6586,6586]]],[1545493395839,["jiangfan@hezy.local",[[-1,6586,"\n"]],[6586,6586],[6585,6585]]]],null,"jiangfan@hezy.local"]]}